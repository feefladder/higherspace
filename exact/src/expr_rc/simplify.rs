///
/// ("Π(π,1/4)","√π","Π(π,3/4)"),
/// 
/// ("Π[(π,1),(√5,1)]","√5","Σ(5,π)"),
/// ("Σ(2,√5)","√5","Σ(10,ξ1)"),
/// ("Σ(2,√5)","√5","ξ10"),

/// 
/// ("Π[(π,1),(√5,1)]","√5","Σ(5,π)"),
/// "Π(π,1)" -> π Done!
/// "Σ(10,ξ1)" -> "ξ10" Done?
/// ("Π[(π,2),(√5,1)]","√5","Σ(5,Π(π,2))"),

/// fractional powers:
/// always collect as many factors as possible under the same power:
/// Π[(π,1/3),(e,1/3)] -> Π(Π[(π,1),(e,1)],1/3)
/// Π(Π[(π,1),(e,1)],1/3),(e,1)) -> Π[(π,1/3),(e,4/3)]
/// Square roots:
/// π^(p/2) -> π^(p-1)√π
/// π^(p/q)√π -> π^(p/2q)
/// 
/// ("√Σ(2,π)","√π","Π[(π,1),(√2,1)]"),
/// ("√Σ(6,π)","√2","Σ(2,√Σ(3,π))"),
/// ("√Σ(2,π)","√2","Σ(2,√π)"),
/// ("Π(π,1/4)","√π","Π(π,3/4)"),
/// ("Π(π,2)","√π","Π[(π,2),(√π,1)]"),
/// ("π","√π", "Π[(π,1),(√π,1)]"),

// use super::Expr;

// impl Expr {
//   fn drop_zeroes() {

//   }
// }
